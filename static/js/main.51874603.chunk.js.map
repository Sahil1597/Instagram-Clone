{"version":3,"sources":["components/Navbar.js","components/screens/Home.js","components/screens/SignIn.js","components/screens/Profile.js","components/screens/Signup.js","components/screens/CreatePost.js","components/screens/UserProfile.js","components/screens/SubscribesUserPosts.js","reducers/userReducer.js","components/screens/Reset.js","components/screens/Newpassword.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","searchModal","useRef","useState","search","setSearch","userDetails","setUserDetails","useContext","UserContext","state","dispatch","history","useHistory","useEffect","M","Modal","init","current","className","to","id","key","data-target","style","color","onClick","localStorage","clear","type","push","ref","placeholder","value","onChange","e","query","target","fetch","method","headers","body","JSON","stringify","then","res","json","result","user","map","item","i","_id","getInstance","close","email","Home","data","setData","getItem","console","log","posts","padding","postedBy","name","float","postid","newData","filter","catch","err","src","photo","likes","includes","postId","length","title","comments","record","fontWeight","text","onSubmit","preventDefault","SignIn","password","setPassword","setEmail","test","error","toast","html","classes","setItem","token","payload","Profile","mypics","setPics","image","setImage","mypost","FormData","append","pic","url","maxWidth","margin","borderBottom","display","justifyContent","width","height","borderRadius","followers","following","file","files","alt","Signup","setName","undefined","setUrl","uploadFields","message","PostData","uploadPic","CreatePost","setTitle","setBody","textAlign","postDetails","UserProfile","userProfile","setProfile","userid","useParams","showfollow","setShowFollow","followId","prevState","unfollowId","newFollower","SubscribesUserPosts","reducer","action","Reset","createContext","Routing","parse","location","pathname","startsWith","exact","path","Newpassword","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51874603.chunk.js","sourcesContent":["import React,{useContext,useRef,useEffect,useState} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../App';\r\nimport M from 'materialize-css';\r\nimport '../../src/App.css';\r\n\r\nconst Navbar = () => {\r\n  const searchModal = useRef(null)\r\n  const [search,setSearch] = useState('')\r\n  const [userDetails,setUserDetails] = useState([])\r\n  const {state,dispatch} = useContext(UserContext)\r\n  const history = useHistory()\r\n  useEffect(() =>{\r\n    M.Modal.init(searchModal.current)\r\n  },[])\r\n\r\n  const renderList = () => {\r\n    if(state){\r\n      return [\r\n        <li key = \"1\"><i data-target=\"modal1\" className =\"large material-icons modal-trigger\" style = {{color:\"black\"}}>search</i></li>,\r\n        <li key = \"2\"><Link to = \"/profile\">Profile</Link></li>,\r\n        <li key = \"3\"><Link to = \"/create\">Create Post</Link></li>,\r\n        <li key = \"4\"><Link to = \"/myfollowingpost\">My Following Posts</Link></li>,\r\n        <li key = \"5\">\r\n          <button className =\"btn #c62828 red darken-3\"\r\n            onClick = {() =>{\r\n              localStorage.clear()\r\n              dispatch({type:\"CLEAR\"})\r\n              history.push('/signin')\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </li>\r\n      ]\r\n    }\r\n    else{\r\n      return [\r\n        <li key = \"6\"><Link to = \"/signin\">Signin</Link></li>,\r\n        <li key = \"7\"><Link to = \"/signup\">Signup</Link></li>\r\n      ] \r\n    }\r\n  }\r\n\r\n  const fetchUsers = (query) => {\r\n    setSearch(query)\r\n    fetch('/search-users',{\r\n      method:\"post\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        query\r\n      })\r\n    }).then(res => res.json())\r\n    .then(result => {\r\n      setUserDetails(result.user)\r\n    })\r\n  }\r\n\r\n    return (\r\n        <nav>\r\n    <div className = \"nav-wrapper white\" >\r\n      <Link to = {state?\"/\":\"/signin\"} className = \"brand-logo left\">Instagram</Link>\r\n      <ul id=\"nav-mobile\" className = \"right \">\r\n        {renderList()}\r\n      </ul>\r\n    </div>\r\n    <div id=\"modal1\" className =\"modal\" ref = {searchModal} style = {{color:\"black\"}}>\r\n      <div className =\"modal-content\">\r\n        <input \r\n          type = \"text\"\r\n          placeholder = \"search users\"\r\n          value = {search}\r\n          onChange = {(e) => fetchUsers(e.target.value)}\r\n        />\r\n        <ul className = \"collection\">\r\n          {userDetails.map((item,i) => {\r\n            return <Link key = {i} to = {item._id !== state._id ? \"/profile/\"+item._id : '/profile'} onClick = {() => {\r\n              M.Modal.getInstance(searchModal.current).close()\r\n              setSearch('')\r\n            }}><li className = \"collection-item\">{item.email}</li></Link>\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <div className =\"modal-footer\">\r\n        <button className =\"modal-close waves-effect waves-green btn-flat\" onClick = {() => setSearch('')}>close</button>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React,{useState,useEffect,UseContext, useContext} from 'react';\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [data,setData] = useState([])\r\n    const{state,dispatch} = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('/allpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId) => {\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    } \r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method:\"delete\",\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            const newData = data.filter(item => {\r\n                return item._id != result._id\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className = \"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className = \"card home-card\" key = {item._id}>\r\n                            <h5 style = {{padding:\"5px\"}}><Link to = {item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link>\r\n                                {item.postedBy._id == state._id\r\n                                && <i className = \"material-icons\" style = {{float:\"right\"}}\r\n                                    onClick = {() => deletePost(item._id)}\r\n                                >delete</i>\r\n                                }\r\n                            </h5>\r\n                            <div className = \"card-image\">\r\n                                <img src = {item.photo} />\r\n                            </div>\r\n                            <div className = \"card-content\">\r\n                            <i className =\"material-icons\" style = {{color:\"red\"}}>favorite</i>\r\n                                {item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className = \"material-icons\"\r\n                                        onClick = {() => {unlikePost(item._id)}}\r\n                                    >thumb_down</i>\r\n                                    :\r\n                                    <i className = \"material-icons\"\r\n                                        onClick = {() => {likePost(item._id)}}\r\n                                    >thumb_up</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map((record,i) => {\r\n                                        return(\r\n                                        <h6 key = {i}><span style = {{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit = {(e) =>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                    <input type = \"text\" placeholder = \"add comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React,{useState,useContext} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport {UserContext} from '../../App'; \r\nimport M from 'materialize-css';\r\n\r\nconst SignIn = () => {\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password,setPassword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\",classes: \"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch('/signin',{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error,classes: \"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html: \"Signed in successfully\",classes: \"#388e3c green darken-2\"})\r\n                history.push('/');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    return (\r\n        <div className = \"mycard\">\r\n            <div className =\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input  \r\n                type = \"text\"\r\n                placeholder = \"email\"\r\n                value = {email}\r\n                onChange = {(e) => setEmail(e.target.value)}\r\n                />\r\n                \r\n                <input \r\n                type = \"password\"\r\n                placeholder = \"password\"\r\n                value = {password}\r\n                onChange = {(e) => setPassword(e.target.value)}\r\n                />\r\n                <button className =\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick = {() => PostData()}\r\n                >\r\n                    Login\r\n                </button>\r\n                <h5>\r\n                    <Link to = \"/signup\">Don't have an account ?</Link>\r\n                </h5>\r\n                <h6>\r\n                    <Link to = \"/reset\">Forgot Password ?</Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile  = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n       fetch('/mypost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    useEffect(()=>{\r\n       if(image){\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"dkcslopim\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/dkcslopim/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n    \r\n       \r\n           fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               //window.location.reload()\r\n           })\r\n       \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       }\r\n    },[image])\r\n    const updatePhoto = (file)=>{\r\n        setImage(file)\r\n    }\r\n   return (\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n              margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n\r\n         \r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n              \r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={state?state.pic:\"loading\"}\r\n                   />\r\n                 \r\n               </div>\r\n               <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n        \r\n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            </div>      \r\n           <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","import React, {useState,useEffect} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [name,setName] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n    \r\n    useEffect(() => {\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n    },[url])\r\n\r\n    const uploadPic = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"dkcslopim\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dkcslopim/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFields = () => {\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\",classes: \"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/signup\",{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.error){\r\n                M.toast({html: data.error,classes: \"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message,classes: \"#388e3c green darken-2\"})\r\n                history.push('/signin');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const PostData = () => {\r\n        if(image){\r\n            uploadPic()\r\n        }\r\n        else{\r\n            uploadFields()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"mycard\">\r\n            <div className =\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input  \r\n                type = \"text\"\r\n                placeholder = \"name\"\r\n                value = {name}\r\n                onChange = {(e) => setName(e.target.value)}\r\n                />\r\n\r\n                <input  \r\n                type = \"text\"\r\n                placeholder = \"email\"\r\n                value = {email}\r\n                onChange = {(e) => setEmail(e.target.value)}\r\n                />\r\n                \r\n                <input \r\n                type = \"password\"\r\n                placeholder = \"password\"\r\n                value = {password}\r\n                onChange = {(e) => setPassword(e.target.value)}\r\n                />\r\n                <div className = \"file-field input-field\">\r\n                    <div className = \"btn #64b5f6 blue darken-1\">\r\n                        <span>Upload pic</span>\r\n                        <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n                    </div>\r\n                    <div className = \"file-path-wrapper\">\r\n                        <input className = \"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                 <button className =\"btn waves-effect waves-light #64b5f6 blue darker-1\"\r\n                 onClick = {() =>PostData()}\r\n                 >\r\n                    SignUp\r\n                </button>\r\n                <h5>\r\n                    <Link to = \"/signin\">Already have an account ?</Link>\r\n                </h5>\r\n                <h6>\r\n                    <Link to = \"/reset\">Forgot Password ?</Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React, {useState,useEffect} from 'react';\r\nimport M from 'materialize-css';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    useEffect(() => {\r\n        if(url){\r\n            fetch(\"/createPost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.error){\r\n                    M.toast({html: data.error,classes: \"#c62828 red darken-3\"})\r\n                }\r\n                else{\r\n                    M.toast({html: \"Created post successfully\",classes: \"#388e3c green darken-2\"})\r\n                    history.push('/');\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        }\r\n    },[url])\r\n\r\n    const postDetails = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"dkcslopim\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dkcslopim/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className = \"card input-field\"\r\n        style = {{\r\n            margin: \"30px auto\",\r\n            maxWidth: \"500px\",\r\n            padding: \"20px\",\r\n            textAlign: \"center\"\r\n        }}\r\n        >\r\n            <input \r\n            type = \"text\" \r\n            placeholder = \"title\" \r\n            value = {title}\r\n            onChange = {(e) => setTitle(e.target.value)}\r\n            />\r\n            <input \r\n            type = \"text\" \r\n            placeholder = \"body\" \r\n            value = {body}\r\n            onChange = {(e) => setBody(e.target.value)}\r\n            />\r\n            <div className = \"file-field input-field\">\r\n                <div className = \"btn #64b5f6 blue darken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className = \"file-path-wrapper\">\r\n                    <input className = \"file-path validate\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <button className =\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick = {() => postDetails()}\r\n            >\r\n                Submit Post\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import React,{useEffect,useState,useContext} from 'react';\r\nimport {UserContext} from '../../App';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst UserProfile = () => {\r\n    const [userProfile,setProfile] = useState(null)\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow,setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const followUser = () => {\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res =>res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState) => {\r\n                return {\r\n                ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            })\r\n            setShowFollow(false)\r\n        })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res =>res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState) => {\r\n            const newFollower = prevState.user.followers.filter(item =>item !== data._id)\r\n                return {\r\n                ...prevState,\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollower\r\n                    }\r\n                }\r\n            })\r\n            setShowFollow(true)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {userProfile ?\r\n            <div style = {{maxWidth: \"550px\", margin: \"0px auto\"}}>\r\n            <div style = {{\r\n                display:\"flex\",\r\n                justifyContent: \"space-around\",\r\n                margin: \"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div>\r\n                    <img style = {{width:\"160px\", height: \"160px\", borderRadius: \"80px\"}} \r\n                     src = {userProfile.user.pic}\r\n                     />\r\n                </div>\r\n                <div>\r\n                    <h4>{userProfile.user.name}</h4>\r\n                    <h5>{userProfile.user.email}</h5>\r\n                    <div style = {{display: \"flex\", justifyContent: \"space-between\", width: \"108%\"}}>\r\n                        <h6>{userProfile.posts.length} posts</h6>\r\n                        <h6>{userProfile.user.followers.length} followers</h6>\r\n                        <h6>{userProfile.user.following.length} following</h6>\r\n                    </div>\r\n                    {\r\n                        showfollow?\r\n                        <button style = {{margin:\"10px\"}} className =\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                            onClick = {() => followUser()}\r\n                            >\r\n                            Follow\r\n                        </button>\r\n                        :\r\n                        <button style = {{margin:\"10px\"}} className =\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                            onClick = {() => unfollowUser()}\r\n                        >\r\n                            UnFollow\r\n                        </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n            <div className = \"gallery\">\r\n                {\r\n                    userProfile.posts.map(item => {\r\n                        return(\r\n                            <img key = {item._id} className = \"item\" src = {item.photo} alt = {item.title} />\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n        </div> \r\n        : <h2>Loading ...!</h2>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile;","import React,{useState,useEffect,UseContext, useContext} from 'react';\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst SubscribesUserPosts = () => {\r\n    const [data,setData] = useState([])\r\n    const{state,dispatch} = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('/getsubpost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId) => {\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            //console.log(result)\r\n            const newData = data.map(item => {\r\n                if(item._id == result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    } \r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method:\"delete\",\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result)\r\n            const newData = data.filter(item => {\r\n                return item._id != result._id\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className = \"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className = \"card home-card\" key = {item._id}>\r\n                            <h5 style = {{padding:\"5px\"}}><Link to = {item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile\"}>{item.postedBy.name}</Link>\r\n                                {item.postedBy._id == state._id\r\n                                && <i className = \"material-icons\" style = {{float:\"right\"}}\r\n                                    onClick = {() => deletePost(item._id)}\r\n                                >delete</i>\r\n                                }\r\n                            </h5>\r\n                            <div className = \"card-image\">\r\n                                <img src = {item.photo} />\r\n                            </div>\r\n                            <div className = \"card-content\">\r\n                            <i className =\"material-icons\" style = {{color:\"red\"}}>favorite</i>\r\n                                {item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className = \"material-icons\"\r\n                                        onClick = {() => {unlikePost(item._id)}}\r\n                                    >thumb_down</i>\r\n                                    :\r\n                                    <i className = \"material-icons\"\r\n                                        onClick = {() => {likePost(item._id)}}\r\n                                    >thumb_up</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map((record,i) => {\r\n                                        return(\r\n                                        <h6 key = {i}><span style = {{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit = {(e) =>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                    <input type = \"text\" placeholder = \"add comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscribesUserPosts;","export const initialState = null\r\n\r\nexport const reducer = (state,action) => {\r\n    if(action.type == \"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type == \"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type == \"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type == \"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state\r\n}","import React,{useState,useContext} from 'react';\r\nimport {Link,useHistory} from 'react-router-dom'; \r\nimport M from 'materialize-css';\r\n\r\nconst Reset = () => {\r\n    const history = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n\r\n    const PostData = () => {\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid Email\",classes: \"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch('/reset-password',{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if(data.error){\r\n                M.toast({html: data.error,classes: \"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message,classes: \"#388e3c green darken-2\"})\r\n                history.push('/signin');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    return (\r\n        <div className = \"mycard\">\r\n            <div className =\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input  \r\n                type = \"text\"\r\n                placeholder = \"email\"\r\n                value = {email}\r\n                onChange = {(e) => setEmail(e.target.value)}\r\n                />\r\n                \r\n                <button className =\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick = {() => PostData()}\r\n                >\r\n                    Reset Password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset;","import React,{useState,useContext} from 'react';\r\nimport {Link,useHistory,useParams} from 'react-router-dom'; \r\nimport M from 'materialize-css';\r\n\r\nconst SignIn = () => {\r\n    const history = useHistory()\r\n    const [password,setPassword] = useState(\"\")\r\n    const {token} = useParams()\r\n    console.log(token)\r\n\r\n    const PostData = () => {\r\n\r\n        fetch('/new-password',{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                token\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error,classes: \"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                M.toast({html: data.message,classes: \"#388e3c green darken-2\"})\r\n                history.push('/signin');\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    return (\r\n        <div className = \"mycard\">\r\n            <div className =\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input \r\n                type = \"password\"\r\n                placeholder = \"enter new password\"\r\n                value = {password}\r\n                onChange = {(e) => setPassword(e.target.value)}\r\n                />\r\n                <button className =\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                    onClick = {() => PostData()}\r\n                >\r\n                    Update password\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport {BrowserRouter, Route, Switch,useHistory} from 'react-router-dom';\nimport Home from './components/screens/Home';\nimport Signin from './components/screens/SignIn';\nimport Profile from './components/screens/Profile';\nimport Signup from './components/screens/Signup';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport SubscribesUserPosts from './components/screens/SubscribesUserPosts';\nimport {reducer,initialState} from './reducers/userReducer';\nimport Reset from './components/screens/Reset';\nimport Newpassword from './components/screens/Newpassword';\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n    }\n    else{\n      if(!history.location.pathname.startsWith('/reset'))\n        history.push('/signin')\n    }\n  },[])\n  return (\n    <Switch>\n      <Route exact path = \"/\">\n          <Home />\n        </Route>\n        <Route path = \"/signin\">\n          <Signin />\n        </Route>\n        <Route path = \"/signup\">\n          <Signup />\n        </Route>\n        <Route exact path = \"/profile\">\n          <Profile />\n        </Route>\n        <Route path = \"/create\">\n          <CreatePost />\n        </Route>\n        <Route path = \"/profile/:userid\">\n          <UserProfile />\n        </Route>\n        <Route path = \"/myfollowingpost\">\n          <SubscribesUserPosts />\n        </Route>\n        <Route exact path = \"/reset\">\n          <Reset />\n        </Route>\n        <Route path = \"/reset/:token\">\n          <Newpassword />\n        </Route>\n      </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value = {{state,dispatch}}>\n      <BrowserRouter>\n        <Navbar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}